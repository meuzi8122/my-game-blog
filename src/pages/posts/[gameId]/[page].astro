---
import type { GetStaticPathsOptions } from "astro";
import { PostClient } from "../../../client/post";
import Layout from "../../../components/layout.astro";
import List from "../../../components/list.astro";
import Pagination from "../../../components/pagination.astro";
import type { Game,Post } from "../../../type";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
    const posts = await PostClient.findPosts();

    const lor: Game = {id: "lor", title: "Library of Ruina"}
    const lcb: Game = {id: "lcb", title: "Limbus Company"}

    let lorPosts: Post[] = [];
    let lcbPosts: Post[] = [];

    for (const post of posts) {
        if (post.game.id === "lor") {
            lorPosts.push(post);
        } else if (post.game.id === "lcb") {
            lcbPosts.push(post);
        }
    }

    return [
        paginate(lorPosts, { params: { gameId: lor.id }, props: { game: lor } }),
        paginate(lcbPosts, { params: { gameId: lcb.id }, props: { game: lcb } }),
    ];
}

type Props = {
    page: {
        data: Post[];
        total: number;
        url: {
            prev: string;
            next: string;
        }
    }
    game: Game;
}

const { page, game } = Astro.props;
---

<Layout title={`${game.title} | プロムンゲーメモ`}>
    <div>
        <div>
            <div class="space-y-2 pt-6 pb-8 md:space-y-5">
                <h1 class="text-3xl font-extrabold">{game.title}</h1>
                <div class="divider"></div>
            </div>
        </div>
        <List posts={page.data} />
        {page.total && <Pagination prev={page.url.prev} next={page.url.next} />}
    </div>
</Layout>
